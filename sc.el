(defun update-running-accounts ()
  (interactive)
  (let* ((triplets
	  '(
	    ("D" "F" "Q")
	    ("AM" "AV" "AN")
	    ("BC" "K" "AU")
	    ("BD" "M" "AW")
	    ("BE" "L" "AX")
	    ("BF" "N" "AY")
	    ("BG" "O" "AZ")
	    ))
	 (x triplets))
    (while x
      (let* ((x1 (car x))
	     (a (nth 0 x1))
	     (b (nth 1 x1))
	     (c (nth 2 x1))
	     (search (format "^let %s\\([0-9]+\\) = %s.+$" a a))
	     (replace-format (format "let %s%%d = %s%%d+%s%%d-%s%%d" a a b c))
	     )
	(message "Replacing all %S with %S" search replace-format)
	(goto-char (point-min))
	(setq x (cdr x))
	(while (re-search-forward search (point-max) t)
	  (let ((n (string-to-number (buffer-substring (match-beginning 1)
						    (match-end 1)))))
	    (replace-match (format replace-format
				   n (1- n) n n) t t)))))))
